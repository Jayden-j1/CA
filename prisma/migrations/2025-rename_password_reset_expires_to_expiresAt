-- migration.sql
-- -----------------------------------------------------------------------------
-- Purpose:
--   Safe migration to align PasswordResetToken schema:
--   - Move from column "expires" â†’ "expiresAt" (TIMESTAMP(3) NOT NULL).
--   - Works even if table already has rows (no data loss).
--
-- Why this approach?
--   - Some environments still had "expires" while your Prisma schema expects
--     "expiresAt". This migration:
--       1) Adds "expiresAt" nullable.
--       2) Backfills from "expires" when present.
--       3) Sets "expiresAt" NOT NULL.
--       4) Drops "expires" if it exists.
--
-- Notes:
--   - Uses Postgres default schema "public". Adjust schema if needed.
--   - Wrapped in transaction so it applies atomically.
-- -----------------------------------------------------------------------------

BEGIN;

-- 1) Ensure table exists
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.tables
    WHERE table_schema = 'public' AND table_name = 'PasswordResetToken'
  ) THEN
    RAISE EXCEPTION 'Table "public"."PasswordResetToken" does not exist.';
  END IF;
END$$;

-- 2) Add "expiresAt" if it does not exist (nullable temporarily for backfill)
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema = 'public'
      AND table_name = 'PasswordResetToken'
      AND column_name = 'expiresAt'
  ) THEN
    ALTER TABLE "public"."PasswordResetToken"
      ADD COLUMN "expiresAt" TIMESTAMP(3);
  END IF;
END$$;

-- 3) Backfill "expiresAt" from legacy "expires" when "expiresAt" is null and "expires" exists
DO $$
BEGIN
  IF EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema = 'public'
      AND table_name = 'PasswordResetToken'
      AND column_name = 'expires'
  ) THEN
    UPDATE "public"."PasswordResetToken"
       SET "expiresAt" = "expires"
     WHERE "expiresAt" IS NULL;
  END IF;
END$$;

-- 4) Enforce NOT NULL on "expiresAt" (after backfill)
ALTER TABLE "public"."PasswordResetToken"
  ALTER COLUMN "expiresAt" SET NOT NULL;

-- 5) Drop legacy "expires" column if it exists
DO $$
BEGIN
  IF EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema = 'public'
      AND table_name = 'PasswordResetToken'
      AND column_name = 'expires'
  ) THEN
    ALTER TABLE "public"."PasswordResetToken"
      DROP COLUMN "expires";
  END IF;
END$$;

COMMIT;

-- -----------------------------------------------------------------------------
-- Verification (optional):
--   After running this migration, you should see only "expiresAt" and no "expires".
--   You can use:
--     SELECT column_name
--     FROM information_schema.columns
--     WHERE table_schema = 'public' AND table_name = 'PasswordResetToken';
-- -----------------------------------------------------------------------------
